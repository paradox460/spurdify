# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  - name: nimVersion
    value: 0.20.0

jobs:
- job: Build
  strategy:
    matrix:
      linux:
        imageName: 'ubuntu-latest'
        binaryName: spurdify-linux
      osx:
        imageName: 'macOS-latest'
        binaryName: spurdify-osx

  pool:
    vmImage: $(imageName)

  steps:
  - script: sudo apt-get update && sudo apt-get install upx
    displayName: 'Install UPX (Linux)'
    condition: eq(variables['Agent.OS'], 'Linux')

  - script: brew install upx
    displayName: 'Install UPX (Mac)'
    condition: eq(variables['Agent.OS'], 'Darwin')

  - script: |
      curl 'https://nim-lang.org/download/nim-$(nimVersion)-linux_x64.tar.xz' > nim.tar.xz
      tar xvf nim.tar.xz
    displayName: 'Download and Install nim'
    condition: eq(variables['Agent.OS'], 'Linux')

  - script: brew install nim
    displayName: 'Install Nim via Homebrew'
    condition: eq(variables['Agent.OS'], 'Darwin')

  - script: |
      export PATH=nim-$(nimVersion)/bin/:$PATH
      nimble upx
      mv spurdify $(binaryName)
    displayName: 'Build binary'

  - task: PublishPipelineArtifact@0
    displayName: Publish Artifact
    inputs:
      artifactName: $(binaryName)-build
      targetPath: $(System.DefaultWorkingDirectory)/$(binaryName)


- job: UpdateGithubRelease
  dependsOn: Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))

  steps:
  - task: DownloadPipelineArtifact@2
    displayName: Download Linux Artifacts
    inputs:
      artifactName: spurdify-linux-build
      targetPath: $(Build.ArtifactStagingDirectory)

  - task: DownloadPipelineArtifact@2
    displayName: Download OSX Artifacts
    inputs:
      artifactName: spurdify-osx-build
      targetPath: $(Build.ArtifactStagingDirectory)

  - task: GitHubRelease@0
    displayName: "Create GH release"
    inputs:
      condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
      gitHubConnection: GitHubReleases
      isDraft: true
      releaseNotesFile: "RELEASENOTES.md"
      assets: $(System.ArtifactsDirectory)/spurdify-*
